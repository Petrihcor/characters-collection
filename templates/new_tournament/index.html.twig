{% extends 'base.html.twig' %}

{% block title %}Tournament Bracket{% endblock %}

{% block body %}
    <h1>Tournament Bracket</h1>


    <!-- Текущий уровень турнира -->
    <div class="bracket">
        <h2>Current Bracket</h2>
        {% set sorted_bracket = bracket|keys|sort %} {# Получаем отсортированные ключи #}

        {% for level in sorted_bracket %}
            <div class="level" id="level-{{ level }}">
                <h3>Level {{ level }}</h3>
                <div class="players">
                    {% for player in bracket[level] %}
                        <div class="player">
                            <span>{{ player.getName() }}</span>
                            {% for stat in tournament.stats %}
                                <span class="stat">{{ stat|capitalize }}: {{ attribute(player, stat) }}</span>
                            {% endfor %}
                        </div>
                    {% endfor %}
                </div>
            </div>
        {% endfor %}
    </div>

{#        <form action="{{ path('choose_participans', {id: tournament.id}) }}" method="post">#}
{#            <button type="submit">Подбор соперников</button>#}
{#        </form>#}
    <!-- Кнопка вызова модального окна для боя -->
    <button id="openFightModal">Подбор соперников</button>

    <!-- Модальное окно для боя -->
    <div id="fightModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Бой</h2>
            <div id="fightersContainer">
                <p>Загрузка соперников...</p>
            </div>
            <button id="startFight">Начать бой</button>
        </div>
    </div>
    <!-- Кнопка запуска следующего раунда -->
{#    <form action="{{ path('tournament_reset', {id: id}) }}" method="post">#}
{#        <button type="submit" class="reset-button">Перезапустить турнир</button>#}
{#    </form>#}
{#    <form action="{{ path('tournament_stop', {id: id}) }}" method="post">#}
{#        <button type="submit" class="reset-button">Завершить турнир</button>#}
{#    </form>#}
    <!-- Итоговые места -->
    <div class="places">
        <h2>Final Places</h2>
{#        <table>#}
{#            <thead>#}
{#            <tr>#}
{#                <th>Место</th>#}
{#                <th>Игрок</th>#}
{#                {% for stat in tournament.stats %}#}
{#                    <th>{{ stat }}</th>#}
{#                {% endfor %}#}
{#            </tr>#}
{#            </thead>#}
{#            <tbody>#}
{#            {% for player in places %}#}
{#                <tr>#}
{#                    <td>{{ loop.index }}</td>#}
{#                    <td>{{ player.getName() }}</td>#}
{#                    {% for stat in stats %}#}
{#                        <td>{{ attribute(player, 'get' ~ stat) }}</td>#}
{#                    {% endfor %}#}

{#                </tr>#}
{#            {% endfor %}#}
{#            </tbody>#}
{#        </table>#}
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const modal = document.getElementById("fightModal");
            const openModalBtn = document.getElementById("openFightModal");
            const closeModalBtn = document.querySelector(".close");
            const startFightBtn = document.getElementById("startFight");
            const fightersContainer = document.getElementById("fightersContainer");

            // Открываем модалку и подгружаем бойцов
            openModalBtn.addEventListener("click", function () {
                modal.style.display = "block";
                fetch("{{ path('choose_participans', {id: tournament.id}) }}", { method: "POST" })
                    .then(response => response.json())
                    .then(data => {
                        fightersContainer.innerHTML = "";
                        data.fighters.forEach(fighter => {
                            let statsHtml = `
                    <p class="character-stat">Сила: ${fighter.strength}</p>
                    <p class="character-stat">Ловкость: ${fighter.agility}</p>
                    <p class="character-stat">Интеллект: ${fighter.intelligence}</p>
                    <p class="character-stat">Особые умения: ${fighter.specialPowers}</p>
                    <p class="character-stat">Бойцовские навыки: ${fighter.fightingSkills}</p>
                `;

                            let fighterHtml = `
                    <div class="character-card" style="background-image: url('/images/${fighter.image}');">
                        <div class="character-info">
                            <h3 class="character-name">${fighter.name}</h3>
                            ${statsHtml}
                        </div>
                        <input type="hidden" name="fighters[]" value="${fighter.id}">
                    </div>
                `;

                            fightersContainer.innerHTML += fighterHtml;
                        });
                    });
            });


            // Закрываем модалку
            closeModalBtn.addEventListener("click", function () {
                modal.style.display = "none";
            });

            // Начинаем бой
            // Запуск боя
            startFightBtn.addEventListener("click", function (event) {
                event.preventDefault(); // Останавливаем стандартное поведение кнопки

                // Создаем форму и добавляем в нее бойцов
                const form = document.createElement("form");
                form.method = "POST";
                form.action = "{{ path('fight', {id: tournament.id}) }}";

                document.querySelectorAll('input[name="fighters[]"]').forEach(input => {
                    const hiddenInput = document.createElement("input");
                    hiddenInput.type = "hidden";
                    hiddenInput.name = "fighters[]";
                    hiddenInput.value = input.value;
                    form.appendChild(hiddenInput);
                });

                document.body.appendChild(form);
                form.submit(); // Отправляем форму
            });
        });

    </script>
{% endblock %}
